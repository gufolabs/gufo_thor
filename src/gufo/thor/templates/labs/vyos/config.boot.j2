interfaces {
    {% if router_id -%}
    loopback lo {
       address {{ router_id }}/32
    }
    {%- endif %}
    {%- for iface in eth_interfaces %}
    ethernet {{ iface.name }} {
        address {{ iface.address }}
        description "{{ iface.description }}"
        ipv6 {
            address {
                no-default-link-local
            }
        }
    }
    {%- endfor %}
}
system {
    host-name '{{ hostname }}'
    ipv6 {
        disable
    }
    {%- if has_users %}
    login {
        {%- for user in users %}
        user {{ user.user }} {
            authentication {
                plaintext-password {{ user.password }}
            }
        }
        {%- endfor %}
    }
    {%- endif %}
}
{%- if has_protocols %}
protocols {
    {% if has_isis -%}
    isis {
        {%- for iface in eth_interfaces %}
        {%- if iface.is_isis %}
        interface {{ iface.name }} {
            hello-padding
            {%- if iface.isis_metric %}
            metric {{ iface.isis_metric }}
            {%- endif %}
            network {
               point-to-point
            }
        }
        {%- endif %}
        {%- endfor %}
        level level-2
        log-adjacency-changes
        metric-style wide
        net {{ isis_net }}
        redistribute {
            ipv4 {
                connected {
                    level-2 {
                        metric 2
                    }
                }
            }
        }
    }
    {%- endif %}
}
{% endif %}
{% if has_users or has_snmp -%}
service {
    {% if has_snmp -%}
    snmp {
        {% for community in snmp -%}
        {% if community.version == "v2c" -%}
        community {{ community.community }} {
            authorization ro
        }
        {% endif -%}
        {%- endfor %}
    }
    {% endif -%}
    {% if has_users -%}
    ssh {
        access-control {
            allow {
                {% for user in users -%}
                user {{ user.user }}
                {%- endfor %}
            }
        }
    }
    {% endif -%}
}
{% endif -%}