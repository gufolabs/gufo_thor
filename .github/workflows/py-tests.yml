name: Run Tests
env:
  PIP_CACHE_DIR: .pip
  PYTHONPATH: src
on:
  push:
    paths:
      - ".github/workflows/py-tests.yml"
      - "pyproject.toml"
      - "examples/**"
      - "src/**"
      - "tests/**"
      - "pyproject.toml"
    branches:
      - master
  pull_request:
    branches:
      - master
  release:
    types: ["published"]
jobs:
  lint:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Set Up Python 3.14
        uses: actions/setup-python@v5
        with:
          python-version: "3.14"

      # Cache dependencies
      - name: Cache Dependencies
        uses: actions/cache@v4
        with:
          path: ./.pip
          key: ${{ runner.os }}-lint-3.14-${{ hashFiles('./pyproject.toml') }}

      - name: Upgrade Pip
        run: python -m pip install --upgrade pip

      - name: Install Dependencies
        run: pip install -IU -e .[lint]

      - name: Check Formatting
        run: ruff format --check src/ tests/

      - name: Check Ruff
        run: ruff check -q src/ tests/

      - name: Check Mypy
        run: mypy src/

  test-coverage:
    runs-on: ubuntu-24.04
    needs: lint
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Set Up Python {{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: "3.14"

      # Cache dependencies
      - name: Cache Dependencies
        uses: actions/cache@v4
        with:
          path: ./.pip
          key: ${{ runner.os }}-tests-coverage-3.14-${{ hashFiles('./pyproject.toml') }}

      - name: Upgrade Pip
        run: python -m pip install --upgrade pip

      - name: Install Dependencies
        run: pip install -IU -e .[test]

      - name: Run Tests
        run: pytest -v --cov --cov-branch --cov-report=xml tests/

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  test:
    runs-on: ubuntu-24.04
    needs: [test-coverage]
    strategy:
      fail-fast: true
      matrix:
        # Run on all supported versions
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13", "3.14"]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Set Up Python {{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      # Cache dependencies
      - name: Cache Dependencies
        uses: actions/cache@v4
        with:
          path: ./.pip
          key: ${{ runner.os }}-tests-{{ matrix.python-version }}-${{ hashFiles('./pyproject.toml') }}

      - name: Upgrade Pip
        run: python -m pip install --upgrade pip

      - name: Upgrade Build
        run: pip install --upgrade build

      - name: Install Dependencies
        run: pip install -IU -e .[deps,test]

      - name: Run Tests
        run: pytest -v tests/

  publish:
    runs-on: ubuntu-24.04
    environment: pypi
    permissions:
      id-token: write
    needs: test
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Set Up Python 3.14
        uses: actions/setup-python@v5
        with:
          python-version: "3.14"

      - name: Upgrade Pip
        run: python -m pip install --upgrade pip

      - name: Upgrade Build
        run: pip install --upgrade build

      - name: Build Package
        run: python -m build --sdist --wheel

      - name: Publish distribution ðŸ“¦ to PyPI
        if: startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          print-hash: true
